{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/issue.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<mat-toolbar>\\n  <span>Angular 6 - MEAN Stack Sample Application</span>\\n</mat-toolbar>\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport {\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatTableModule,\n  MatDividerModule,\n  MatSnackBarModule\n} from '@angular/material';\n\nimport { IssueService } from './issue.service';\n// config. routes\nconst routes: Routes = [\n  { path: 'create', component: CreateComponent },\n  { path: 'list', component: ListComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: '', redirectTo: '/list', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [AppComponent, ListComponent, CreateComponent, EditComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule\n  ],\n  providers: [IssueService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<p>\\n  create works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IssueService } from '../../issue.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  constructor(private issueService: IssueService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IssueService } from '../../issue.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private issueService: IssueService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-right {\\r\\n    text-align: center;\\r\\n\\r\\n}\"","module.exports = \"<div>\\r\\n  <mat-card>\\r\\n    <button mat-raised-buttton color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New Issue</button>\\r\\n    <mat-divider></mat-divider>\\r\\n    <table mat-table [dataSource]=\\\"issues\\\">\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Title</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"response\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Response</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.response}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"severity\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Severity</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.severity}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.status}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\" class=\\\"\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef  class=\\\"mat-column-right\\\">Actions</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"  class=\\\"mat-column-right\\\">\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"editIssue(element._id)\\\">Edit</button>\\r\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"deleteIssue(element._id)\\\">Delete</button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Issue } from '../../issue.model';\nimport { IssueService } from '../../issue.service';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  issues: Issue[];\n  displayedColumns = ['title', 'response', 'severity', 'status', 'actions'];\n\n  // inject the service to use it\n  constructor(private issueService: IssueService, private router: Router) { }\n\n  ngOnInit() {\n    this.fetchIssues();\n    this.testIssue();\n  }\n\n  fetchIssues(): void {\n    this.issueService.getIssues().subscribe((data: Issue[]) => {\n      this.issues = data;\n      console.log('Data requested...');\n      console.log(this.issues);\n    });\n  }\n\n  editIssue(id: number): void {\n    this.router.navigate([`/edit/${id}`]);\n  }\n\n  deleteIssue(id: number): void {\n    this.issueService.deleteIssue(id).subscribe(() => {\n      this.fetchIssues();\n    });\n  }\n\n  testIssue(): void {\n    const obj = {\n      id: 21, title: 'string', responsible: 'string', description: 'string', severity: 'string', status: 'string'\n    };\n   const val = this.issueService.testIssue(obj);\n    console.log(val);\n  }\n}\n\n","/**\n * @description this service connects to the backend nodejs server that uses the\n * endpoints setup to the mongodb 'issues' collection\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueService {\n  uri = 'http://localhost:4000/api/v1';\n\n  // test config as to pass an obj instead of multiple items as a param\n  defaultIssue = {\n    id: Number,\n    title: String,\n    responsible: String,\n    description: String,\n    severity: String,\n    status: String,\n  };\n\n  // instance of HttpClient\n  constructor(private http: HttpClient) { }\n\n  getIssues() {\n    console.log('getIssues route hit!');\n    return this.http.get(`${this.uri}/issues`);\n  }\n\n  getIssueById(id: number) {\n    return this.http.get(`${this.uri}/issues/${id}`);\n  }\n\n  addIssue(title: string, responsible: string, description: string, severity: string) {\n    // object with values of issue\n    const issue = {\n      title,\n      responsible,\n      description,\n      severity,\n    };\n    // post object when hitting the backend route\n    return this.http.post(`${this.uri}/issues/add`, issue);\n  }\n\n  updateIssue(id: number, title: string, responsible: string, description: string, severity: string, status: string) {\n    // object with values of issue\n    const issue = {\n      title,\n      responsible,\n      description,\n      severity,\n      status,\n    };\n    // post object when hitting the backend route\n    return this.http.post(`${this.uri}/issues/update/${id}`, issue);\n  }\n\n  testIssue(issue: object) {\n    // object with values of issue\n    const defaultIssue = this.defaultIssue;\n    const issueObj = {...defaultIssue, ...issue};\n    // post object when hitting the backend route\n    return issueObj;\n  }\n\n  deleteIssue(id: number) {\n    return this.http.get(`${this.uri}/issues/delete/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}