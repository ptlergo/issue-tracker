{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/issue.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<main class=\\\"main\\\">\\n  <mat-toolbar>\\n    <h1>Issue Tracker App</h1>\\n  </mat-toolbar>\\n\\n        <router-outlet></router-outlet>\\n</main>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport {\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatTableModule,\n  MatDividerModule,\n  MatSnackBarModule\n} from '@angular/material';\n\nimport { IssueService } from './issue.service';\n// config. routes\nconst routes: Routes = [\n  { path: 'create', component: CreateComponent },\n  { path: 'list', component: ListComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: '', redirectTo: '/list', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [AppComponent, ListComponent, CreateComponent, EditComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    ReactiveFormsModule\n  ],\n  providers: [IssueService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".page__create .create__form {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"page__create container\\\">\\n  <div class=\\\"flat-card \\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <h2 class=\\\"card-title\\\">create new issue</h2>\\n      </mat-card-title>\\n        </mat-card-header>\\n    <mat-divider></mat-divider>\\n    <form [formGroup]=\\\"createForm\\\" class=\\\"create-form create__form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Issue Title\\\" formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Responsible\\\" formControlName=\\\"responsible\\\" #responsible>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n          <mat-option value=\\\"low\\\">Low</mat-option>\\n          <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n          <mat-option value=\\\"High\\\">High</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <div class=\\\"actions-box\\\">\\n\\n        <button mat-flat-button color=\\\"accent\\\" routerLink=\\\"/list\\\">Back</button>\\n        <button type=\\\"submit\\\" (click)=\\\"addIssue(title.value, responsible.value, description.value, severity.value)\\\"\\n          [disabled]=\\\"createForm.pristine || createForm.invalid\\\" mat-flat-button color=\\\"primary\\\">Save</button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IssueService } from '../../issue.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  createForm: FormGroup;\n\n  constructor(private issueService: IssueService, private fb: FormBuilder, private router: Router) { \n    this.createForm = this.fb.group({\n      title: ['', Validators.required ],\n      responsible: '',\n      description: '',\n      severity: ''\n    });\n\n  }\n\n  // event handler to add issue\n  addIssue(title, responsible, description, severity) {\n    this.issueService.addIssue(title, responsible, description, severity)\n      .subscribe(() => {\n        this.router.navigate(['/list']);\n      });\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".page__create .edit__form {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"page__create container\\\">\\n  <div class=\\\"flat-card \\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <h2 class=\\\"card-title\\\">Update Issue</h2>\\n      </mat-card-title>\\n        </mat-card-header>\\n    <mat-divider></mat-divider>\\n    <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form edit__form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Issue Title\\\" formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Responsible\\\" formControlName=\\\"responsible\\\" #responsible>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n          <mat-option value=\\\"low\\\">Low</mat-option>\\n          <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n          <mat-option value=\\\"High\\\">High</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\" #status>\\n          <mat-option value=\\\"Open\\\">Open</mat-option>\\n          <mat-option value=\\\"In Progress\\\">In Progress</mat-option>\\n          <mat-option value=\\\"Done\\\">Done</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <div class=\\\"actions-box\\\">\\n\\n        <button mat-flat-button color=\\\"accent\\\" routerLink=\\\"/list\\\">Back</button>\\n        <button type=\\\"submit\\\" (click)=\\\"updateIssue(title.value, responsible.value, description.value, severity.value, status.value)\\\"\\n          [disabled]=\\\"updateForm.pristine || updateForm.invalid\\\" mat-flat-button color=\\\"primary\\\">Save</button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { IssueService } from '../../issue.service';\nimport { Issue } from '../../issue.model';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  id: String;\n  issue: any = {};\n  updateForm: FormGroup;\n\n  constructor(\n    private issueService: IssueService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackbar: MatSnackBar,\n    private fb: FormBuilder) {\n      this.createForm();\n\n   }\n\n   createForm() {\n    this.updateForm = this.fb.group({\n      title: ['', Validators.required ],\n      responsible: '',\n      description: '',\n      severity: '',\n      status: ''\n    });\n   }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n      this.issueService.getIssueById(this.id).subscribe(res => {\n        this.issue = res;\n        this.updateForm.get('title').setValue(this.issue.title);\n        this.updateForm.get('responsible').setValue(this.issue.responsible);\n        this.updateForm.get('description').setValue(this.issue.description);\n        this.updateForm.get('severity').setValue(this.issue.severity);\n        this.updateForm.get('status').setValue(this.issue.status);\n      });\n    });\n  }\n\n  updateIssue(title, responsible, description, severity, status) {\n    this.issueService.updateIssue(this.id, title, responsible, description, severity, status)\n    .subscribe(() => {\n      this.snackbar.open('issue updated successfully', 'OK', {\n        duration: 3000,\n      });\n    });\n  }\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-right {\\r\\n    text-align: center;\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"flat-card\\\">\\r\\n    <mat-card-content>\\r\\n      <table mat-table [dataSource]=\\\"issues\\\">\\r\\n        <ng-container matColumnDef=\\\"title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Title</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"response\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Response</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.response}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"severity\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Severity</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.severity}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Status</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.status}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"actions\\\" class=\\\"\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\r\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"editIssue(element._id)\\\">Edit</button>\\r\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"deleteIssue(element._id)\\\">Delete</button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    </mat-card-content>\\r\\n    <div class=\\\"actions-box\\\">\\r\\n      <button mat-flat-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New Issue</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Issue } from '../../issue.model';\nimport { IssueService } from '../../issue.service';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  issues: Issue[];\n  displayedColumns = ['title', 'response', 'severity', 'status', 'actions'];\n\n  // inject the service to use it\n  constructor(private issueService: IssueService, private router: Router) { }\n\n  ngOnInit() {\n    this.fetchIssues();\n    this.testIssue();\n  }\n\n  fetchIssues(): void {\n    this.issueService.getIssues().subscribe((data: Issue[]) => {\n      this.issues = data;\n      console.log('Data requested...');\n      console.log(this.issues);\n    });\n  }\n\n  editIssue(id: string): void {\n    this.router.navigate([`/edit/${id}`]);\n  }\n\n  deleteIssue(id: string): void {\n    this.issueService.deleteIssue(id).subscribe(() => {\n      this.fetchIssues();\n    });\n  }\n\n  testIssue(): void {\n    const obj = {\n      id: 21, title: 'string', responsible: 'string', description: 'string', severity: 'string', status: 'string'\n    };\n   const val = this.issueService.testIssue(obj);\n    console.log(val);\n  }\n}\n\n","/**\n * @description this service connects to the backend nodejs server that uses the\n * endpoints setup to the mongodb 'issues' collection\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueService {\n  uri = 'https://my-issue-tracker-app.herokuapp.com/api/v1';\n\n  // test config as to pass an obj instead of multiple items as a param\n  defaultIssue = {\n    id: String,\n    title: String,\n    responsible: String,\n    description: String,\n    severity: String,\n    status: String,\n  };\n\n  // instance of HttpClient\n  constructor(private http: HttpClient) { }\n\n  getIssues() {\n    console.log('getIssues route hit!');\n    return this.http.get(`${this.uri}/issues`);\n  }\n\n  getIssueById(id) {\n    return this.http.get(`${this.uri}/issues/${id}`);\n  }\n\n  addIssue(title: string, responsible: string, description: string, severity: string) {\n    // object with values of issue\n    const issue = {\n      title,\n      responsible,\n      description,\n      severity,\n    };\n    // post object when hitting the backend route\n    return this.http.post(`${this.uri}/issues/add`, issue);\n  }\n\n  updateIssue(id, title: string, responsible: string, description: string, severity: string, status: string) {\n    // object with values of issue\n    const issue = {\n      title,\n      responsible,\n      description,\n      severity,\n      status,\n    };\n    // post object when hitting the backend route\n    return this.http.post(`${this.uri}/issues/update/${id}`, issue);\n  }\n\n  testIssue(issue: object) {\n    // object with values of issue\n    const defaultIssue = this.defaultIssue;\n    const issueObj = {...defaultIssue, ...issue};\n    // post object when hitting the backend route\n    return issueObj;\n  }\n\n  deleteIssue(id: string) {\n    return this.http.get(`${this.uri}/issues/delete/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}